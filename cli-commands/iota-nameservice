# devnet
# iota_names object https://explorer.rebased.iota.org/object/0x7a223639d9fbb6aa121cc4bd110c92a282ebe07b64de3a9f5e600174a8c90be8?network=devnet
IOTA_NAMES_PACKAGE_ID=0x29ab1b20537b620febdb8bf1f93fcfb32d8024e96f4bd6661688f5ab2d912638
IOTA_NAMES_OBJECT_ID=0x7a223639d9fbb6aa121cc4bd110c92a282ebe07b64de3a9f5e600174a8c90be8
PAYMENTS_PACKAGE_ID=0xd0c72a25021bb06b3b998c54d5833b62ebc37098293086144902e1ec07ffb168
ADMIN_CAP=0xc67f174b790cbec683538b0a8ebee44a1ae6e4fec4ab8d34a59d896d843bb119
# price for 3 chars: 1000000000
# price for 4 chars: 500000000
# price for 5+ chars: 100000000
DOMAIN_NAME='"name.iota"'
TARGET_ADDRESS=$(iota client active-address)
iota client ptb \
--split-coins gas "[500000000]" \
--assign coins \
--move-call $IOTA_NAMES_PACKAGE_ID::payment::init_registration @$IOTA_NAMES_OBJECT_ID $DOMAIN_NAME \
--assign payment_intent \
--move-call $PAYMENTS_PACKAGE_ID::payments::handle_base_payment "<0x0000000000000000000000000000000000000000000000000000000000000002::iota::IOTA>" @$IOTA_NAMES_OBJECT_ID payment_intent coins.0 \
--assign receipt \
--move-call $IOTA_NAMES_PACKAGE_ID::payment::register receipt @$IOTA_NAMES_OBJECT_ID @0x6 \
--assign res \
--move-call $IOTA_NAMES_PACKAGE_ID::controller::set_target_address @$IOTA_NAMES_OBJECT_ID res "some(@$TARGET_ADDRESS)" @0x6 \
--transfer-objects "[res]" @$TARGET_ADDRESS \
--dry-run

# compute price
DOMAIN_NAME_WITHOUT_TLD="iota"
LENGTH=${#DOMAIN_NAME_WITHOUT_TLD}
inspect_output=$(iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::iota_names::get_config "<$IOTA_NAMES_PACKAGE_ID::pricing_config::PricingConfig>" @$IOTA_NAMES_OBJECT_ID \
--assign config \
--move-call $IOTA_NAMES_PACKAGE_ID::pricing_config::calculate_base_price config $LENGTH \
--dev-inspect)
echo $inspect_output
bytes=($(echo "$inspect_output" | grep -o 'Bytes: \[.*\]' | tail -n 1 | sed -E 's/[^0-9,]//g' | tr ',' '\n'))
HEX_VALUES=$(echo $bytes | tr ' ' '\n' | xargs -I {} printf "\\\\x%02x" {})
echo -n -e $HEX_VALUES | od -An -t u8 | tr -d ' '

# convert the result bytes in JS
const bytes = new Uint8Array([0, 148, 53, 119, 0, 0, 0, 0]);
const buffer = bytes.buffer;
const view = new DataView(buffer);
const u64Number = view.getBigUint64(0, true); // 'true' for little-endian, 'false' for big-endian
console.log(u64Number.toString()); 

# set set_reverse_lookup
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::controller::set_reverse_lookup @$IOTA_NAMES_OBJECT_ID $DOMAIN_NAME \
--dry-run

# set set_data 
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::controller::set_user_data @0x093738ab2ff173e45e93a59bf7cc1adbf6e16e17f414446459a42940cc5dcf86 @0x1a593c66b93e01fa74e88d53e4d0fea49e0c27f5b948ba71f17782b304129ec0 '"my_key"' '"my_value"' @0x6 \
--dry-run

# authorize admin 
IOTA_NAMES_PACKAGE_ID=0x29ab1b20537b620febdb8bf1f93fcfb32d8024e96f4bd6661688f5ab2d912638
IOTA_NAMES_OBJECT_ID=0x7a223639d9fbb6aa121cc4bd110c92a282ebe07b64de3a9f5e600174a8c90be8
ADMIN_CAP=0xc67f174b790cbec683538b0a8ebee44a1ae6e4fec4ab8d34a59d896d843bb119
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::admin::authorize @$ADMIN_CAP @$IOTA_NAMES_OBJECT_ID \
--dry-run
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::iota_names::authorize_app "<$IOTA_NAMES_PACKAGE_ID::admin::Admin>" @$ADMIN_CAP @$IOTA_NAMES_OBJECT_ID \
--dry-run

# resolve address
DOMAIN_NAME='"first.iota"'
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::iota_names::registry "<$IOTA_NAMES_PACKAGE_ID::registry::Registry>" @$IOTA_NAMES_OBJECT_ID \
--assign iota_names \
--move-call $IOTA_NAMES_PACKAGE_ID::domain::new $DOMAIN_NAME \
--assign domain \
--move-call $IOTA_NAMES_PACKAGE_ID::registry::lookup iota_names domain \
--assign name_record_option \
--move-call 0x1::option::borrow "<$IOTA_NAMES_PACKAGE_ID::name_record::NameRecord>" name_record_option \
--assign name_record \
--move-call $IOTA_NAMES_PACKAGE_ID::name_record::target_address name_record \
--assign target_address_option \
--move-call 0x1::option::borrow "<address>" target_address_option \
--assign target_address \
--dev-inspect

# resolve name (reverse lookup/reverse resolution)
ADDRESS=0xee68634fb93502ec391e78ccc94568e9e179ef8ec37fe12daaac4d2c2af32d5c
iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::iota_names::registry "<$IOTA_NAMES_PACKAGE_ID::registry::Registry>" @$IOTA_NAMES_OBJECT_ID \
--assign iota_names \
--move-call $IOTA_NAMES_PACKAGE_ID::registry::reverse_lookup iota_names @$ADDRESS \
--assign domain_option \
--move-call 0x1::option::borrow "<$IOTA_NAMES_PACKAGE_ID::domain::Domain>" domain_option \
--assign domain \
--move-call $IOTA_NAMES_PACKAGE_ID::domain::to_string domain \
--assign name \
--dev-inspect

# resolve name (reverse lookup/reverse resolution) and print as utf-8
ADDRESS=0xee68634fb93502ec391e78ccc94568e9e179ef8ec37fe12daaac4d2c2af32d5c
inspect_output=$(iota client ptb \
--move-call $IOTA_NAMES_PACKAGE_ID::iota_names::registry "<$IOTA_NAMES_PACKAGE_ID::registry::Registry>" @$IOTA_NAMES_OBJECT_ID \
--assign iota_names \
--move-call $IOTA_NAMES_PACKAGE_ID::registry::reverse_lookup iota_names @$ADDRESS \
--assign domain_option \
--move-call 0x1::option::borrow "<$IOTA_NAMES_PACKAGE_ID::domain::Domain>" domain_option \
--assign domain \
--move-call $IOTA_NAMES_PACKAGE_ID::domain::to_string domain \
--assign name \
--dev-inspect)
# Extract the last bytes from the inspect_output
bytes=($(echo "$inspect_output" | grep -o 'Bytes: \[.*\]' | tail -n 1 | sed -E 's/[^0-9,]//g' | tr ',' '\n'))
# Convert the byte values into a raw binary string
name=""
for byte in "${bytes[@]}"; do
  name+=$(printf '\\x%02x' $byte)
done
echo -e "$name"

# set all data
iota client ptb \
--make-move-vec "<std::string::String>" "['key1', 'key2']" \
--assign keys \
--make-move-vec "<std::string::String>" "['value1', 'value2']" \
--assign values \
--move-call 0x2::vec_map::from_keys_values "<std::string::String,std::string::String>" keys values \
--assign data_vec_map \
--move-call $IOTA_NAMES_PACKAGE_ID::domain::new '"thoralf.iota"' \
--assign domain \
--move-call iota::dynamic_field::borrow_mut @0x093738ab2ff173e45e93a59bf7cc1adbf6e16e17f414446459a42940cc5dcf86  \
--assign registry \
--move-call $IOTA_NAMES_PACKAGE_ID::registry::set_data registry domain data_vec_map \
--gas-budget 50000000


# packages init output
{
  "adminAddress": "0x5a5e8ae064966a4117c658ac793bab2108d689a90ff0ae350a941c0e7db8a4ef",
  "adminCap": "0xc67f174b790cbec683538b0a8ebee44a1ae6e4fec4ab8d34a59d896d843bb119",
  "iotaNames": "0x7a223639d9fbb6aa121cc4bd110c92a282ebe07b64de3a9f5e600174a8c90be8",
  "packageId": "0x29ab1b20537b620febdb8bf1f93fcfb32d8024e96f4bd6661688f5ab2d912638",
  "packageIdPricing": "0x29ab1b20537b620febdb8bf1f93fcfb32d8024e96f4bd6661688f5ab2d912638",
  "paymentsPackageId": "0xd0c72a25021bb06b3b998c54d5833b62ebc37098293086144902e1ec07ffb168",
  "publisherId": "0x5a5e8ae064966a4117c658ac793bab2108d689a90ff0ae350a941c0e7db8a4ef",
  "subNamesPackageId": "0xc227e5bb8c4d5d167c598169ee09025adbe0e98cb6ceff163c56ced93f32ef32",
  "tempSubdomainsProxyPackageId": "0xf94b185c793cce91402b856fae62e9fb44e9cd932d9e35b99b3a5cc375778ec5",
  "coins": {
    "IOTA": {
      "type": "0x0000000000000000000000000000000000000000000000000000000000000002::iota::IOTA",
      "metadataId": "0xf7ceb0424ca93f77858c74aebda8bcd5ffe0f32b82ebcc38afb3ba643d03a5f8"
    }
  },
  "registryTableId": "0x38c633815b6819b96a11b0887148e278778e3db92e271c9fa24673e22cd3b1ab"
}
